/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.AbstractObjekat;
import domen.Film;
import domen.Projekcija;
import domen.Radnik;
import domen.Rezervacija;
import domen.RezervisanoSediste;
import domen.Sediste;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import kontroler.Kontroler;
import model.ModelTabeleRediSedista;
import model.ModelTabeleVremenaProjekcija;
import sesija.Sesija;

/**
 *
 * @author Nina777
 */
public class FormaRezervacijaKarata extends javax.swing.JFrame {

    Kontroler k;

    /**
     * Creates new form FormaRezervacijaKarata
     */
    public FormaRezervacijaKarata(java.awt.Frame parent, boolean modal) {
        Sesija.vratiInstancu().getMapa().put("nacin", "unos");
        initComponents();
    }

    FormaRezervacijaKarata() {
        Sesija.vratiInstancu().getMapa().put("nacin", "prikaz");
        initComponents();
        k = new Kontroler();
        try {
            srediFormu();
        } catch (IOException ex) {
            Logger.getLogger(FormaRezervacijaKarata.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormaRezervacijaKarata.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnRezervisi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtRediSedista = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtfNazivRezervacije = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbProjekcija = new javax.swing.JComboBox();
        jtfNazivFilma = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obriši");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        jLabel1.setText("Naziv filma:");

        btnRezervisi.setText("Rezerviši");
        btnRezervisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRezervisiActionPerformed(evt);
            }
        });

        jtRediSedista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtRediSedista);

        jLabel2.setText("Red i sedišta:");

        jLabel5.setText("Naziv rezervacije:");

        jLabel6.setText("Projekcija:");

        cbProjekcija.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jtfNazivFilma.setEditable(false);
        jtfNazivFilma.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 279, Short.MAX_VALUE)
                        .addComponent(btnRezervisi)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(90, 90, 90)
                        .addComponent(btnDodaj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                        .addComponent(btnObrisi))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(39, 39, 39)
                                    .addComponent(jtfNazivRezervacije, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel6))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cbProjekcija, 0, 249, Short.MAX_VALUE)
                                        .addComponent(jtfNazivFilma)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtfNazivRezervacije, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfNazivFilma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbProjekcija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnDodaj)
                    .addComponent(btnObrisi))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(btnRezervisi)
                .addGap(72, 72, 72))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        ModelTabeleRediSedista mtrs = (ModelTabeleRediSedista) jtRediSedista.getModel();
        mtrs.dodajRed();
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        ModelTabeleRediSedista mtrs = (ModelTabeleRediSedista) jtRediSedista.getModel();

        int red = jtRediSedista.getSelectedRow();

        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Odaberite red");
        } else {
            mtrs.obrisiRed(red);
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnRezervisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRezervisiActionPerformed

        String nazivRezervacije = jtfNazivRezervacije.getText().trim();
        Projekcija projekcija = (Projekcija) cbProjekcija.getSelectedItem();

        Radnik radnik = (Radnik) Sesija.vratiInstancu().getMapa().get("radnik");
        Rezervacija r = new Rezervacija(projekcija, 0, nazivRezervacije, radnik);

        ModelTabeleRediSedista mtrs = (ModelTabeleRediSedista) jtRediSedista.getModel();

        if (mtrs.getLista().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Niste uneli sedišta.");
        } else {
            List<Sediste> sedista = mtrs.getLista();

            List<RezervisanoSediste> rezSedista = new ArrayList<>();

            for (Sediste sediste : sedista) {
                sediste.setSala(projekcija.getSala());
                RezervisanoSediste rs = new RezervisanoSediste(r, sediste, 30);
                rezSedista.add(rs);
            }

            boolean uspesnost = false;

            try {
                uspesnost = k.sacuvajRezervaciju(r, rezSedista);
                if (uspesnost == true) {
                    JOptionPane.showMessageDialog(this, "Uspesno sacuvana rezervacija!", "Uspesno", INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Neuspesan unos rezervacije", "Greska", ERROR_MESSAGE);
                }
            } catch (IOException ex) {
                Logger.getLogger(FormaRezervacijaKarata.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FormaRezervacijaKarata.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        this.dispose();
    }//GEN-LAST:event_btnRezervisiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormaRezervacijaKarata.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormaRezervacijaKarata.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormaRezervacijaKarata.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormaRezervacijaKarata.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormaRezervacijaKarata().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnRezervisi;
    private javax.swing.JComboBox cbProjekcija;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtRediSedista;
    private javax.swing.JTextField jtfNazivFilma;
    private javax.swing.JTextField jtfNazivRezervacije;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() throws IOException, ClassNotFoundException {
        Film film = (Film) Sesija.vratiInstancu().getMapa().get("film");
        jtfNazivFilma.setText(film.getNazivFilma());
        
        
        ModelTabeleRediSedista mtrs = new ModelTabeleRediSedista();
        jtRediSedista.setModel(mtrs);

        List<AbstractObjekat> projekcije = new ArrayList<>();
        projekcije = k.vratiListuProjekcija();

        ArrayList<Projekcija> lista = new ArrayList<>();

        for (AbstractObjekat ao : projekcije) {
            Projekcija p = (Projekcija) ao;
            if (p.getFilm().getFilmID()==film.getFilmID()){
                lista.add(p);
            }
        }

        cbProjekcija.removeAllItems();;

        for (Projekcija p : lista) {
            cbProjekcija.addItem(p);
        }

    }
}
