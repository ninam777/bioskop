/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.AbstractObjekat;
import domen.Film;
import domen.Projekcija;
import domen.Radnik;
import domen.Sala;
import domen.Sediste;
import java.awt.Frame;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import kontroler.Kontroler;
import model.ModelTabeleVremenaProjekcija;
import sesija.Sesija;

/**
 *
 * @author Nina777
 */
public class FormaPostavljanjeFilma extends javax.swing.JFrame {

    Kontroler k;

    /**
     * Creates new form FormaPostavljanjeFilma
     */
    public FormaPostavljanjeFilma(java.awt.Frame parent, boolean modal) {
//        super(parent, modal);
        Sesija.vratiInstancu().getMapa().put("nacin", "prikaz");
        initComponents();
    }

    FormaPostavljanjeFilma() {
        Sesija.vratiInstancu().getMapa().put("nacin", "prikaz");
        initComponents();
        k = new Kontroler();
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jtfNazivFilma = new javax.swing.JTextField();
        jtfVremeTrajanjaFilma = new javax.swing.JTextField();
        jtfZanrFilma = new javax.swing.JTextField();
        jtfGlumci = new javax.swing.JTextField();
        jtfReziser = new javax.swing.JTextField();
        jtfPeriodPrikazivanjaOd = new javax.swing.JTextField();
        jtfPeriodPrikazivanjaDo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaSadrzaj = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtVremenaProjekcija = new javax.swing.JTable();
        btnSacuvajFilm = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnDodaj = new javax.swing.JButton();

        setTitle("Postavljanje filma");

        jLabel1.setText("Naziv filma:");

        jLabel2.setText("Vreme trajanja:");

        jLabel3.setText("Period prikazivanja");

        jLabel4.setText("od:");

        jLabel5.setText("do:");

        jLabel6.setText("Žanr:");

        jLabel7.setText("Glumci:");

        jLabel8.setText("Režiser:");

        jLabel9.setText("Sadržaj:");

        jLabel10.setText("Vremena projekcija:");

        jtfVremeTrajanjaFilma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfVremeTrajanjaFilmaActionPerformed(evt);
            }
        });

        jtfPeriodPrikazivanjaOd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfPeriodPrikazivanjaOdActionPerformed(evt);
            }
        });

        jLabel11.setText("minuta");

        jtaSadrzaj.setColumns(20);
        jtaSadrzaj.setRows(5);
        jScrollPane1.setViewportView(jtaSadrzaj);

        jtVremenaProjekcija.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jtVremenaProjekcija);

        btnSacuvajFilm.setText("Sačuvaj");
        btnSacuvajFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajFilmActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obriši");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfPeriodPrikazivanjaOd, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfPeriodPrikazivanjaDo, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtfGlumci)
                                    .addComponent(jtfZanrFilma)
                                    .addComponent(jtfReziser)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfNazivFilma, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jtfVremeTrajanjaFilma, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel11)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addGap(74, 74, 74)
                            .addComponent(btnDodaj)
                            .addGap(18, 18, 18)
                            .addComponent(btnObrisi)
                            .addContainerGap())
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnSacuvajFilm)
                                .addGap(36, 36, 36))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfNazivFilma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfVremeTrajanjaFilma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jtfPeriodPrikazivanjaOd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfPeriodPrikazivanjaDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtfZanrFilma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jtfGlumci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jtfReziser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDodaj)
                        .addComponent(btnObrisi))
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSacuvajFilm)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfVremeTrajanjaFilmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfVremeTrajanjaFilmaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfVremeTrajanjaFilmaActionPerformed

    private void jtfPeriodPrikazivanjaOdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfPeriodPrikazivanjaOdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfPeriodPrikazivanjaOdActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        ModelTabeleVremenaProjekcija mtvp = (ModelTabeleVremenaProjekcija) jtVremenaProjekcija.getModel();
        mtvp.dodajRed();
        try {
            popuniCBuTabeli();
        } catch (IOException ex) {
            Logger.getLogger(FormaPostavljanjeFilma.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormaPostavljanjeFilma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        ModelTabeleVremenaProjekcija mtvp = (ModelTabeleVremenaProjekcija) jtVremenaProjekcija.getModel();

        int red = jtVremenaProjekcija.getSelectedRow();

        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Odaberite red");
        } else {
            mtvp.obrisiRed(red);
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnSacuvajFilmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajFilmActionPerformed

        String rezim = (String) Sesija.vratiInstancu().getMapa().get("rezim");
        if ("izmena".equals(rezim)) {

            Film film = uzmiPodatkeOFilmu();
//            Klijent klijent = uzmiPodatkeOKlijentu();
            List<Projekcija> lp = uzmiPodatkeOProjekcijama();
//

            if (film != null) {
                try {
                    boolean uspesnost = k.sacuvajFilm(film, lp);
                    if (uspesnost) {
                        JOptionPane.showMessageDialog(this, "Uspesno sacuvan klijent", "Uspesno", INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "Neuspesan unos klijenta", "Greska", ERROR_MESSAGE);
                    }
                } catch (IOException ex) {
                    Logger.getLogger(FormaPostavljanjeFilma.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(FormaPostavljanjeFilma.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
//            try {
//                if (klijent != null) {
//                    boolean uspesnost = k.sacuvajKlijenta(klijent);
//                    if (uspesnost) {
//                        JOptionPane.showMessageDialog(this, "Uspesno sacuvan klijent", "Uspesno", INFORMATION_MESSAGE);
//                    } else {
//                        JOptionPane.showMessageDialog(this, "Neuspesan unos klijenta", "Greska", ERROR_MESSAGE);
//                    }
//                } else {
//
//                }
//
//            } catch (IOException ex) {
//                Logger.getLogger(FKlijent.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (ClassNotFoundException ex) {
//                Logger.getLogger(FKlijent.class.getName()).log(Level.SEVERE, null, ex);
//            }
//
        } else {
//            String id = jtfID.getText().trim(); // ovo polje je izbrisano, pogledaj da li ima jos negde, pa izbrisi
            String nazivFilma = jtfNazivFilma.getText().trim();
            String zanr = jtfZanrFilma.getText().trim();
            int trajanje = Integer.parseInt(jtfVremeTrajanjaFilma.getText().trim());
            String reziser = jtfReziser.getText().trim();
            String glumci = jtfGlumci.getText().trim();
            String opis = jtaSadrzaj.getText().trim();
            String p1 = jtfPeriodPrikazivanjaOd.getText().trim();
            String p2 = jtfPeriodPrikazivanjaDo.getText().trim();
            String periodprikazivanja = p1 + " - " + p2;

//            Sluzbenik sl = (Sluzbenik) Sesija.vratiInstancu().getMapa().get("sluzbenik");
            Radnik radnik = (Radnik) Sesija.vratiInstancu().getMapa().get("radnik");
            
            Film f = new Film(0, nazivFilma, zanr, trajanje, reziser, glumci, opis, periodprikazivanja, radnik);
            ModelTabeleVremenaProjekcija mtvp = (ModelTabeleVremenaProjekcija) jtVremenaProjekcija.getModel();

//            List<AbstractObjekat> lista = mtvp.getLista();
            if (mtvp.getLista().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Niste uneli klijenta.");
            } else {
                List<Projekcija> projekcije = mtvp.getLista();
                for (Projekcija p : projekcije) {
                    p.setFilm(f);
                }
                if (!projekcije.isEmpty()) {
                    boolean uspesnost;

                    try {
                        uspesnost = k.sacuvajFilm(f, projekcije);
                        if (uspesnost == true) {
                            JOptionPane.showMessageDialog(this, "Uspesno sacuvan film!", "Uspesno", INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(this, "Neuspesan unos filma", "Greska", ERROR_MESSAGE);
                        }
                    } catch (IOException ex) {
                        Logger.getLogger(FormaPostavljanjeFilma.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(FormaPostavljanjeFilma.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Neuspesan unos klijenata", "Greska", ERROR_MESSAGE);
                }
            }

//            ModelTabeleKlijent mtk = (ModelTabeleKlijent) jtblUnos.getModel();
//            if (mtk.getKlijenti().isEmpty()) {
//                JOptionPane.showMessageDialog(this, "Niste uneli klijenta.");
//            } else {
//                List<Klijent> klijenti = mtk.getKlijenti();
//                for (Klijent klj : klijenti) {
//                    System.out.println(klj);
//                }
//                try {
//                    if (!klijenti.isEmpty()) {
//                        boolean uspesnost;
//
//                        uspesnost = k.sacuvajKlijente(klijenti);
//
//                        if (uspesnost == true) {
//                            JOptionPane.showMessageDialog(this, "Uspesno sacuvani klijenti!", "Uspesno", INFORMATION_MESSAGE);
//                        } else {
//                            JOptionPane.showMessageDialog(this, "Neuspesan unos klijenata", "Greska", ERROR_MESSAGE);
//                        }
//                        new FKlijentPrikaz().setVisible(true);
//                        try {
//                            srediFormu();
//                        } catch (IOException ex) {
//                        } catch (ClassNotFoundException ex) {
//                        }
//
//                        this.dispose();
//                    } else {
//                        JOptionPane.showMessageDialog(this, "Neuspesan unos klijenata", "Greska", ERROR_MESSAGE);
//                    }
//                } catch (IOException ex) {
//                    Logger.getLogger(FKlijent.class.getName()).log(Level.SEVERE, null, ex);
//                } catch (ClassNotFoundException ex) {
//                    Logger.getLogger(FKlijent.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//
        }
    }//GEN-LAST:event_btnSacuvajFilmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormaPostavljanjeFilma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormaPostavljanjeFilma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormaPostavljanjeFilma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormaPostavljanjeFilma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormaPostavljanjeFilma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvajFilm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtVremenaProjekcija;
    private javax.swing.JTextArea jtaSadrzaj;
    private javax.swing.JTextField jtfGlumci;
    private javax.swing.JTextField jtfNazivFilma;
    private javax.swing.JTextField jtfPeriodPrikazivanjaDo;
    private javax.swing.JTextField jtfPeriodPrikazivanjaOd;
    private javax.swing.JTextField jtfReziser;
    private javax.swing.JTextField jtfVremeTrajanjaFilma;
    private javax.swing.JTextField jtfZanrFilma;
    // End of variables declaration//GEN-END:variables

    private void popuniCBuTabeli() throws IOException, ClassNotFoundException {
        ModelTabeleVremenaProjekcija mtvp = (ModelTabeleVremenaProjekcija) jtVremenaProjekcija.getModel();
//        List<AbstractObjekat> projekcije = new ArrayList<>();
//        projekcije = k.vratiListuProjekcija();
        ArrayList<Sala> listaSala = new ArrayList<>();
        ArrayList<Integer> idevi = new ArrayList<>();
        List<AbstractObjekat> sedista = new ArrayList<>();
        sedista = k.vratiListuSedista();

        JComboBox kombo = new JComboBox();
        kombo.removeAllItems();
//        for (AbstractObjekat ao : projekcije) {
//            Projekcija p = (Projekcija) ao;
//            kombo.addItem(p.getSala().getNazivSale());
//        }
//        System.out.println("Sedista "+sedista);
        for (AbstractObjekat ao : sedista) {
            Sediste s = (Sediste) ao;
//            System.out.println("Nesto "+s);
            Sala sala = s.getSala();
//            System.out.println("sala "+ sala);
//            System.out.println("provera "+listaSala.contains(sala));
            if(listaSala.isEmpty()){
                listaSala.add(sala);
                idevi.add(sala.getSalaID());
            } else {
                if(!idevi.contains(sala.getSalaID())){
                    listaSala.add(sala);
                    idevi.add(sala.getSalaID());
                }
            }
            
        }
        
        for (Sala sala : listaSala) {
            kombo.addItem(sala.getNazivSale());
        }
//        System.out.println("Lista sala " + listaSala);
        mtvp.setListaSala(listaSala);

        TableColumnModel tcm = jtVremenaProjekcija.getColumnModel();
        TableColumn kolona = tcm.getColumn(0);
        kolona.setCellEditor(new DefaultCellEditor(kombo));

    }

    private Film uzmiPodatkeOFilmu() {
//        String id = jtfID.getText().trim();
        String nazivFilma = jtfNazivFilma.getText().trim();
        String zanr = jtfZanrFilma.getText().trim();
        int trajanje = Integer.parseInt(jtfVremeTrajanjaFilma.getText().trim());
        String reziser = jtfReziser.getText().trim();
        String glumci = jtfGlumci.getText().trim();
        String opis = jtaSadrzaj.getText().trim();
        String p1 = jtfPeriodPrikazivanjaOd.getText().trim();
        String p2 = jtfPeriodPrikazivanjaDo.getText().trim();
        String periodprikazivanja = p1 + " - " + p2;

//            Sluzbenik sl = (Sluzbenik) Sesija.vratiInstancu().getMapa().get("sluzbenik");
        Radnik radnik = (Radnik) Sesija.vratiInstancu().getMapa().get("radnik");

        Film f = new Film(-1, nazivFilma, zanr, trajanje, reziser, glumci, opis, periodprikazivanja, radnik);

        return f;
    }

    private List<Projekcija> uzmiPodatkeOProjekcijama() {

        ModelTabeleVremenaProjekcija mtvp = new ModelTabeleVremenaProjekcija();
        List<Projekcija> lista = mtvp.getLista();

        return lista;
    }

    private void srediFormu() {
        String rezim = (String) Sesija.vratiInstancu().getMapa().get("rezim");
        if ("izmena".equals(rezim)) {
            prikaziFilm((Film) Sesija.vratiInstancu().getMapa().get("film"));
//            prikaziKlijenta((Klijent) Sesija.vratiInstancu().getMapa().get("klijent"));
//
//            jbtnDodaj.setVisible(false);
//            jbtnUkloni.setVisible(false);
        } else {

//            try {
//                srediTabelu();
//            } catch (Exception ex) {
//
//            }
//
////            jbtnObrisi.setVisible(false);
            ocistiPolja();

        }
        ModelTabeleVremenaProjekcija mtvp = new ModelTabeleVremenaProjekcija();
        jtVremenaProjekcija.setModel(mtvp);
    }

    private void ocistiPolja() {
        jtfNazivFilma.setText("");
        jtfZanrFilma.setText("");
        jtfVremeTrajanjaFilma.setText("");
        jtfReziser.setText("");
        jtfGlumci.setText("");
        jtaSadrzaj.setText("");
        jtfPeriodPrikazivanjaOd.setText("");
        jtfPeriodPrikazivanjaDo.setText("");
    }
    
    
    private void prikaziFilm(Film film) {
        jtfNazivFilma.setText(film.getNazivFilma());
        jtfZanrFilma.setText(film.getZanr());
        jtfVremeTrajanjaFilma.setText("" + film.getTrajanje());
        jtfReziser.setText(film.getReziser());
        jtfGlumci.setText(film.getGlumci());
        jtaSadrzaj.setText(film.getOpis());
        String[] period = film.getPeriodPrikazivanja().split("-");
        String odp = period[0];
        String dop = period[1];
//        int ind = film.getPeriodPrikazivanja().indexOf("-");
//        String od = film.getPeriodPrikazivanja().substring(0, ind);
//        String dop = film.getPeriodPrikazivanja().substring(ind);
        
        jtfPeriodPrikazivanjaOd.setText(odp);
        jtfPeriodPrikazivanjaDo.setText(dop);

    }
}
