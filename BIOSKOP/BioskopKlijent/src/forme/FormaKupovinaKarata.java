/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.AbstractObjekat;
import domen.Karta;
import domen.Projekcija;
import domen.Radnik;
import domen.Sediste;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import kontroler.Kontroler;
import model.ModelTabeleRediSedista;
import sesija.Sesija;

/**
 *
 * @author Nina777
 */
public class FormaKupovinaKarata extends javax.swing.JFrame {

    Kontroler k;

    /**
     * Creates new form KupovinaKarata
     */
    public FormaKupovinaKarata(java.awt.Frame parent, boolean modal) {
//        super(parent, modal);
        Sesija.vratiInstancu().getMapa().put("nacin", "unos");
        initComponents();
    }

    FormaKupovinaKarata() {
        Sesija.vratiInstancu().getMapa().put("nacin", "prikaz");
        initComponents();
        k = new Kontroler();
        try {
            srediFormu();
        } catch (IOException ex) {
            Logger.getLogger(FormaRezervacijaKarata.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormaRezervacijaKarata.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtRediSedista = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfCena = new javax.swing.JTextField();
        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnPotvrdi = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cbProjekcija = new javax.swing.JComboBox();
        jtfNazivFilma = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Kupovina karata");

        jLabel1.setText("Naziv filma:");

        jtRediSedista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtRediSedista);

        jLabel2.setText("Red i sedišta:");

        jLabel3.setText("Cena:");

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obriši");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        jLabel4.setText("dinara");

        btnPotvrdi.setText("Potvrdi kupovinu");
        btnPotvrdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPotvrdiActionPerformed(evt);
            }
        });

        jLabel5.setText("Projekcija:");

        cbProjekcija.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(90, 90, 90)
                        .addComponent(btnDodaj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnObrisi))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnPotvrdi)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jtfCena, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbProjekcija, 0, 249, Short.MAX_VALUE)
                                    .addComponent(jtfNazivFilma))))
                        .addGap(0, 5, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfNazivFilma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbProjekcija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnDodaj)
                    .addComponent(btnObrisi))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(50, 50, 50)
                .addComponent(btnPotvrdi)
                .addGap(59, 59, 59))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        ModelTabeleRediSedista mtrs = (ModelTabeleRediSedista) jtRediSedista.getModel();
        mtrs.dodajRed();
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        ModelTabeleRediSedista mtrs = (ModelTabeleRediSedista) jtRediSedista.getModel();

        int red = jtRediSedista.getSelectedRow();

        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Odaberite red");
        } else {
            mtrs.obrisiRed(red);
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnPotvrdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPotvrdiActionPerformed

        Projekcija projekcija = (Projekcija) cbProjekcija.getSelectedItem();
        Double cena = Double.parseDouble(jtfCena.getText().trim());
        Radnik radnik = (Radnik) Sesija.vratiInstancu().getMapa().get("radnik");

        ModelTabeleRediSedista mtrs = (ModelTabeleRediSedista) jtRediSedista.getModel();

        if (mtrs.getLista().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Niste uneli sedišta.");
        } else {
            List<Sediste> sedista = mtrs.getLista();

            List<Karta> karte = new ArrayList<>();

            for (Sediste sediste : sedista) {

                Karta karta = new Karta(projekcija, -1, cena, radnik, sediste);
                karte.add(karta);
            }

            boolean uspesnost = false;

            try {
                uspesnost = k.sacuvajKarte(karte);
                if (uspesnost == true) {
                    JOptionPane.showMessageDialog(this, "Uspesno sacuvan film!", "Uspesno", INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Neuspesan unos filma", "Greska", ERROR_MESSAGE);
                }
            } catch (IOException ex) {
                Logger.getLogger(FormaRezervacijaKarata.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FormaRezervacijaKarata.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_btnPotvrdiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormaKupovinaKarata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormaKupovinaKarata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormaKupovinaKarata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormaKupovinaKarata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormaKupovinaKarata().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPotvrdi;
    private javax.swing.JComboBox cbProjekcija;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtRediSedista;
    private javax.swing.JTextField jtfCena;
    private javax.swing.JTextField jtfNazivFilma;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() throws IOException, ClassNotFoundException {
        ModelTabeleRediSedista mtrs = new ModelTabeleRediSedista();
        jtRediSedista.setModel(mtrs);
        List<AbstractObjekat> filmovi = new ArrayList<>();
        filmovi = k.pretraziFilmove(jtfNazivFilma.getText().trim());

        List<AbstractObjekat> projekcije = new ArrayList<>();
        projekcije = k.vratiListuProjekcija();

        List<AbstractObjekat> lista = new ArrayList<>();

        if (filmovi.isEmpty()) {
            lista = projekcije;
        } else {
            for (AbstractObjekat ao : projekcije) {
                Projekcija p = (Projekcija) ao;
                for (AbstractObjekat f : filmovi) {
                    if (p.getFilm().equals(f)) {
                        lista.add(p);
                    }
                }
            }
        }

        cbProjekcija.removeAllItems();;

        for (AbstractObjekat ao : lista) {
            cbProjekcija.addItem(ao);
        }
    }
}
